plugins {
	id 'application'
	id 'eclipse'
}

sourceCompatibility = 11
targetCompatibility = 11

distTar.enabled=false
distZip.enabled=true

mainClassName='kieker.tools.mop.ModelOperationMain'

sourceSets.main.resources.srcDirs = [ '../resources' ]

test {
	useJUnitPlatform()
}

dependencies {
	implementation project(":common")
	implementation project(":analysis")
	implementation project(":tools")

	implementation "com.beust:jcommander:${jcommanderVersion}"

	// https://mvnrepository.com/artifact/org.eclipse.emf/org.eclipse.emf.ecore
	implementation "org.eclipse.emf:org.eclipse.emf.ecore:2.38.0"
	implementation "org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.39.0"

	implementation "com.fasterxml.jackson.core:jackson-databind:2.19.0"

	implementation "jakarta.xml.bind:jakarta.xml.bind-api:4.0.2"
	implementation "com.sun.xml.bind:jaxb-impl:4.0.5"
	implementation "org.apache.commons:commons-compress:1.27.1"
	implementation "org.apache.commons:commons-lang3:3.17.0"

	implementation "org.csveed:csveed:0.8.2"

	testImplementation "org.junit.jupiter:junit-jupiter-api:5.13.1"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.13.1"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:1.13.0"

	testImplementation project (path: ':common', configuration: 'testArchives')
	testImplementation project (path: ':tools', configuration: 'testArchives')
	testImplementation "org.mockito:mockito-core:5.16.1"
	testImplementation "de.cau.cs.se.teetime:teetime:${libTeetimeVersion}:test"
}

task uploadArchives {
	println 'mop skipped'
}

eclipse {
	classpath {
		file {
			whenMerged { classpath ->
				classpath.entries.removeAll { entry ->
					entry instanceof org.gradle.plugins.ide.eclipse.model.ProjectDependency
						&& ['/common', '/tools'].contains(entry.path)
						&& entry.entryAttributes['test']
				}
			}
		}
	}
}
