plugins {
	id 'java'
	id 'java-library'
	id 'eclipse'
	id 'maven-publish'
}

sourceCompatibility = 11
targetCompatibility = 11

// The following lines are necessay to create a test jar
project.configurations {
	testArchives.extendsFrom (testCompile)
}

project.task ('jarTest', type:Jar, dependsOn: project.testClasses, description: 'create a jar from the test source set') {
	from project.sourceSets.test.output
	archiveClassifier = 'test'
}

project.artifacts {
	testArchives project.jarTest
}

dependencies {
	implementation project(':common')
	api project(':analysis')
	api project(':model')
	api project(':monitoring')

	api 'org.apache.commons:commons-math3:3.6.1'	// used by OPAD
	api 'org.apache.commons:commons-lang3:3.12.0'		// used by OPAD

	implementation "com.beust:jcommander:${jcommanderVersion}"

	implementation 'javax.jms:javax.jms-api:2.0.1'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'

	implementation "ch.qos.logback:logback-classic:$libLogbackVersion"
	implementation "org.slf4j:slf4j-api:$libSlf4jApiVersion"
	implementation 'org.apache.groovy:groovy-all:4.0.17'

	// https://mvnrepository.com/artifact/com.github.yannrichet/Rsession
	implementation 'com.github.yannrichet:Rsession:1.8.3'

	// https://mvnrepository.com/artifact/org.rosuda.REngine/Rserve
	implementation 'org.rosuda.REngine:Rserve:1.8.1'

	// https://mvnrepository.com/artifact/org.rosuda.REngine/REngine
	implementation 'org.rosuda.REngine:REngine:2.1.0'

	// https://mvnrepository.com/artifact/org.apache.activemq/activemq-core
	api 'org.apache.activemq:activemq-core:5.7.0'


	// Some dependencies for the HTTP connector of the KDB
	api fileTree(dir: rootProject.file('kieker-examples/JavaEEServletContainerExample/jetty/lib'), include: 'jetty-*.jar')

	testImplementation "junit:junit:$libJunitVersion"

	testImplementation project(':common').sourceSets.test.output
	testImplementation project(':analysis').sourceSets.test.output
}

// publishing
publishing {
	publications {
		maven(MavenPublication) {
			groupId = 'net.kieker-monitoring'
			artifactId = 'tools'
			version = version

			from components.java
		}
	}

	repositories {
		maven {
			def mavenUser = "NoMavenUser"
			if (System.env.kiekerMavenUser != null) {
				mavenUser = System.env.kiekerMavenUser
			}
			def mavenPassword = "NoMavenPassword"
			if (System.env.kiekerMavenPassword != null) {
				mavenPassword = System.env.kiekerMavenPassword
			}
			credentials {
				username = mavenUser
				password = mavenPassword
			}

			// Maven central:
			def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
			def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'

			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
		}
	}
}
// This is necessary to avoid eclipse problems; eclipse does not allow the same project to be imported twice as dependency
eclipse {
	classpath {
		file {
			whenMerged { classpath ->
				classpath.entries.removeAll { entry ->
					entry instanceof org.gradle.plugins.ide.eclipse.model.ProjectDependency
						&& entry.path == '/common'
						&& entry.entryAttributes['test']
				}
			}
		}
		containsTestFixtures = true
	}
}
