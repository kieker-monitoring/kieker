plugins {
	id 'java'
	id 'application'
}

application {
	mainClass = 'kieker.tools.oteltransformer.RecordReceiverMain'
}

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
	implementation project(":tools")
	implementation project(":analysis")

	implementation 'de.cau.cs.se.teetime:teetime:3.1.1'
	implementation 'org.slf4j:slf4j-api:2.0.+'
	implementation 'ch.qos.logback:logback-classic:1.5.8'
	implementation "com.beust:jcommander:${jcommanderVersion}"

	implementation "io.opentelemetry:opentelemetry-api:${opentelemetryJavaVersion}"
	implementation "io.opentelemetry:opentelemetry-sdk:${opentelemetryJavaVersion}"
	implementation "io.opentelemetry:opentelemetry-exporter-otlp:${opentelemetryJavaVersion}"
	implementation "io.opentelemetry:opentelemetry-exporter-zipkin:${opentelemetryJavaVersion}"
}


jar {
    zip64 true
    manifest {
        attributes 'Implementation-Title': 'Otel-Transformer',
                   'Implementation-Version': '2.0.0-SNAPSHOT',
                   'Main-Class': 'kieker.tools.oteltransformer.RecordReceiverMain'
    }
    
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll{ 
          it.name.endsWith('jar') && 
          !it.name.contains('influxdb-java-2.24') &&
          !it.name.contains('jetty') &&
          !it.name.contains('springframework') &&
          !it.name.contains('weka')
        }.collect { zipTree(it) }
    }
}