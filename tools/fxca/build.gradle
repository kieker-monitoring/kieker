plugins {
//	id 'com.github.johnrengelman.shadow' version '7.1.1'
	id 'application'
	id 'eclipse'
}

sourceCompatibility = 11
targetCompatibility = 11

distTar.enabled=false
distZip.enabled=true

repositories {
	mavenCentral()
	maven { url "https://central.sonatype.com/repository/maven-snapshots/" }
	maven { url "https://oss.sonatype.org/content/repositories/releases/" }
}

// decativated zip file too large
//shadowJar {
//archiveBaseName.set('shadow')
//archiveClassifier.set('')
//archiveVersion.set('')
//}

mainClassName = 'kieker.tools.fxca.FxcaMain'

sourceSets.main.resources.srcDirs = [ '../resources' ]

jar {
	manifest {
		attributes "Main-Class": mainClassName
	}
}

dependencies {
	implementation project(':common')
	implementation project(':analysis')
	implementation project(':tools')

	implementation "org.csveed:csveed:0.8.2"

	implementation "org.apache.commons:commons-csv:1.14.0"
	implementation "org.apache.commons:commons-collections4:4.5.0"
	implementation "org.apache.commons:commons-lang3:3.17.0"
	implementation "commons-io:commons-io:2.19.0"
	implementation "org.eclipse.emf:org.eclipse.emf.ecore:2.39.0"
	implementation "org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.39.0"
	implementation "de.cau.cs.se.teetime:teetime:${libTeetimeVersion}"

	implementation "com.beust:jcommander:${jcommanderVersion}"

	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	testImplementation "org.junit.jupiter:junit-jupiter-api:5.13.1"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.13.1"

	testImplementation project (path: ':common', configuration: 'testArchives')
	testImplementation project (path: ':tools', configuration: 'testArchives')

	testImplementation "org.mockito:mockito-core:5.18.0"
	testImplementation "de.cau.cs.se.teetime:teetime:${libTeetimeVersion}:test"
}


task uploadArchives {
	println 'fxca skipped'
}

eclipse {
	classpath {
		file {
			whenMerged { classpath ->
				classpath.entries.removeAll { entry ->
					entry instanceof org.gradle.plugins.ide.eclipse.model.ProjectDependency
						&& ['/common', '/tools'].contains(entry.path)
						&& entry.entryAttributes['test']
				}
			}
		}
	}
}
