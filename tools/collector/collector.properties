#############################################
# (c) Kieker project 2018
#############################################
# Collector configuration


## General Kieker setup

## The name of the Kieker instance.
kieker.monitoring.name=KIEKER

## The name of the VM running Kieker. If empty the name will be determined 
## automatically, else it will be set to the given value.
kieker.monitoring.hostname=

## Automatically add a metadata record to the monitoring log when writing
## the first monitoring record. The metadata record contains infromation 
## on the configuration of the monitoring controller.
kieker.monitoring.metadata=true

## you may add more kieker monitoring specific settings

## define input
# TCP server for multiple connections
kieker.tools.source=kieker.tools.source.MultipleConnectionTcpSourceCompositeStage
kieker.tools.source.MultipleConnectionTcpSourceCompositeStage.port=9879
kieker.tools.source.MultipleConnectionTcpSourceCompositeStage.capacity=8192

# # File input
# kieker.tools.source=kieker.tools.source.LogsReaderCompositeStage
# kieker.tools.source.LogsReaderCompositeStage.logDirectories=pathA:pathB
# in windows
# kieker.tools.source.LogsReaderCompositeStage.logDirectories=pathA;pathB


## define output
# In this example we provide a file output configuration. you may choose what ever fits your
# need.
# 
# For file output, you should to set the customStoragePath otherwise
# the data will be written to your temp folder

#####
kieker.monitoring.writer=kieker.monitoring.writer.filesystem.FileWriter
#
## In order to use a custom directory, set customStoragePath as desired. 
## Examples: /var/kieker or C:\\KiekerData (ensure the folder exists).
## Otherwise the default temporary directory will be used.
kieker.monitoring.writer.filesystem.FileWriter.customStoragePath=
#
## Charset to use for text serialization (default UTF-8)
kieker.monitoring.writer.filesystem.FileWriter.charsetName=UTF-8
#
## The maximal number of entries (records) per created file.
## Must be greater than zero.
kieker.monitoring.writer.filesystem.FileWriter.maxEntriesInFile=25000
#
## The maximal file size of the generated monitoring log. Older files will be 
## deleted if this file size is exceeded. Given in MiB.
## At least one file will always remain, regardless of size!
## Use -1 to ignore this functionality. 
kieker.monitoring.writer.filesystem.FileWriter.maxLogSize=-1
#
## The maximal number of log files generated. Older files will be 
## deleted if this number is exceeded.
## At least one file will always remain, regardless of size!
## Use -1 to ignore this functionality. 
kieker.monitoring.writer.filesystem.FileWriter.maxLogFiles=-1
#
## Handler for the map file, default TextMapFileHandler
kieker.monitoring.writer.filesystem.FileWriter.mapFileHandler=kieker.monitoring.writer.filesystem.TextMapFileHandler
#
## When flushing is disabled, it could require a lot of records before
## finally any writing to the map file is done.
kieker.monitoring.writer.filesystem.TextMapFileHandler.flush=true
#
## Set compression for TextMapFileHandler (compression not supported yet)
kieker.monitoring.writer.filesystem.TextMapFileHandler.compression=kieker.monitoring.writer.compression.NoneCompressionFilter
#
## Log stream handler, default RotatingLogFilePoolHandler
kieker.monitoring.writer.filesystem.FileWriter.logFilePoolHandler=kieker.monitoring.writer.filesystem.RotatingLogFilePoolHandler
#
## Log stream handler, default TextLogStreamHandler (text serialization)
kieker.monitoring.writer.filesystem.FileWriter.logStreamHandler=kieker.monitoring.writer.filesystem.TextLogStreamHandler
# You may want to use binary serialization, as it is faster and more concise.
# kieker.monitoring.writer.filesystem.FileWriter.logStreamHandler=kieker.monitoring.writer.filesystem.BinaryLogStreamHandler
#
## When flushing is disabled, it could require a lot of records before
## finally any writing to the log file(s) is done.
kieker.monitoring.writer.filesystem.FileWriter.flush=true
#
## When flushing is disabled, records are buffered in memory before written.
## This setting configures the size of the used buffer in bytes.
kieker.monitoring.writer.filesystem.FileWriter.bufferSize=8192
#
## When compression is enabled, each log file is written as zipped binary file.
# Please note compression results in slower record processing.
kieker.monitoring.writer.filesystem.BinaryFileWriter.compression=kieker.monitoring.writer.filesystem.compression.NoneCompressionFilter
