buildscript {
	repositories {
		maven {url "https://plugins.gradle.org/m2/"}
	}
}

plugins {
	id 'java-library'
	id 'eclipse'
	id 'maven-publish'
}

// TODO I don't know why this needs to be specified, as this is already specified in the parent build.gradle (as is apply plugin: 'java')
// 	however, it seems to be ignored by this subproject, both in eclipse and on Jenkins
sourceSets {
	test {
	java {
		srcDir 'test'
		srcDir 'test-gen'
	}
	resources {
		srcDirs = ['test-resources']
	}
	}
}

sourceCompatibility = 11
targetCompatibility = 11

// The following lines are necessay to create a test jar
project.configurations {
	testArchives.extendsFrom (testCompile)
}

project.task ('jarTest', type:Jar, dependsOn: project.testClasses, description: 'create a jar from the test source set') {
	from project.sourceSets.test.output
	archiveClassifier = 'test'
}

project.artifacts {
	testArchives project.jarTest
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':common')

	implementation "com.rabbitmq:amqp-client:$libAmqpVersion"

	implementation "org.jctools:jctools-core:$libJctoolsVersion"

	implementation "com.github.oshi:oshi-core:6.8.2"

	// https://mvnrepository.com/artifact/org.influxdb/influxdb-java
	implementation "org.influxdb:influxdb-java:2.25"

	implementation "org.tukaani:xz:$libXzVersion"	// compression algorithms used by the file writers

	implementation "org.apache.cxf:cxf-bundle-minimal:$libCxfVersion"
	implementation "org.apache.commons:commons-compress:1.27.1"

	implementation "org.glassfish.jersey.core:jersey-server:$jerseyVersion"
	implementation "org.glassfish.jersey.core:jersey-common:$jerseyVersion"
	implementation "org.glassfish.jersey.core:jersey-client:$jerseyVersion"

	implementation "javax.servlet:javax.servlet-api:4.0.1"
	implementation "javax.jms:javax.jms-api:2.0.1"

	implementation "jakarta.xml.bind:jakarta.xml.bind-api:4.0.2"
	implementation "javax.jws:javax.jws-api:1.1"

	implementation "org.influxdb:influxdb-java:2.25"

	implementation "com.squareup.okhttp3:okhttp:4.12.0"

	// testing
	testImplementation "org.hamcrest:hamcrest:$libHamcrestVersion"

	testImplementation "org.javassist:javassist:3.30.2-GA"

	testImplementation "junit:junit:$libJunitVersion"

	testImplementation "org.objenesis:objenesis:3.4"

	testImplementation "org.easymock:easymock:5.6.0"
	testImplementation "org.mockito:mockito-core:$libMockitoVersion"

	// this project depends on the tests of common, e.g., it requires the class AbstractKiekerTest
	testImplementation project (path: ':common', configuration: 'testArchives')

	testImplementation "org.eclipse.jetty:jetty-server:12.0.23"
	testImplementation "org.eclipse.jetty.ee10:jetty-ee10-webapp:12.0.23"
	testImplementation "org.eclipse.jetty:apache-jsp:11.0.25"

	testImplementation "commons-io:commons-io:2.19.0"

	testImplementation project(':common').sourceSets.test.output
}

// publishing
publishing {
	publications {
		maven(MavenPublication) {
			groupId = 'net.kieker-monitoring'
			artifactId = 'monitoring-core'
			version = version

			from components.java
		}
	}

	repositories {
		maven {
			def mavenUser = "NoMavenUser"
			if (System.env.kiekerMavenUser != null) {
				mavenUser = System.env.kiekerMavenUser
			}
			def mavenPassword = "NoMavenPassword"
			if (System.env.kiekerMavenPassword != null) {
				mavenPassword = System.env.kiekerMavenPassword
			}
			credentials {
				username = mavenUser
				password = mavenPassword
			}

			// Maven central:
			def releasesRepoUrl = 'https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/'
			def snapshotsRepoUrl = 'https://central.sonatype.com/repository/maven-snapshots/'

			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
		}
	}
}

// This is necessary to avoid eclipse problems; eclipse does not allow the same project to be imported twice as dependency
eclipse {
	classpath {
		file {
			whenMerged { classpath ->
				classpath.entries.removeAll { entry ->
					entry instanceof org.gradle.plugins.ide.eclipse.model.ProjectDependency
						&& entry.path == '/common'
						&& entry.entryAttributes['test']
				}
			}
		}
	}
}
