plugins {
	id 'eclipse'
	id 'maven-publish'
}

sourceCompatibility = 11
targetCompatibility = 11

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':common')
	implementation project(':monitoring:core')

	// disl not available via maven
	implementation resolveLibrary('disl-2.0/disl-1.0-SNAPSHOT.jar')
	// DiSLs dependencies need to be added manually
	implementation 'org.ow2.asm:asm:9.7'
	implementation 'org.ow2.asm:asm-tree:9.7'
	implementation 'org.ow2.asm:asm-analysis:9.7'
	implementation 'org.ow2.asm:asm-commons:9.7'

	implementation 'org.ow2.asm:asm-util:9.7'
}

// publishing
publishing {
	publications {
		maven(MavenPublication) {
			groupId = 'net.kieker-monitoring'
			artifactId = 'monitoring-disl'
			version = version

			from components.java
		}
	}

	repositories {
		maven {
			def mavenUser = "NoMavenUser"
			if (System.env.kiekerMavenUser != null) {
				mavenUser = System.env.kiekerMavenUser
			}
			def mavenPassword = "NoMavenPassword"
			if (System.env.kiekerMavenPassword != null) {
				mavenPassword = System.env.kiekerMavenPassword
			}
			credentials {
				username = mavenUser
				password = mavenPassword
			}

			// Maven central:
			def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
			def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'

			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
		}
	}
}

def resolveLibrary(String library) {
def libraryDir = rootProject.file(dirLib)
return fileTree(dir: libraryDir, include: library).filter { it.isFile() }
}
