buildscript {
	repositories {
		maven {url "https://plugins.gradle.org/m2/"}
	}
	dependencies {
		classpath "io.freefair.gradle:aspectj-plugin:8.10"
	}
}

plugins {
	id 'eclipse'
	id 'maven-publish'
	id("io.freefair.aspectj.post-compile-weaving") version "8.6"
}

sourceCompatibility = 11
targetCompatibility = 11

// The following lines are necessay to create a test jar
project.configurations {
	testArchives.extendsFrom (testCompile)
}

project.task ('jarTest', type:Jar, dependsOn: project.testClasses, description: 'create a jar from the test source set') {
	from project.sourceSets.test.output
	archiveClassifier = 'test'
}

project.artifacts {
	testArchives project.jarTest
}

repositories {
	mavenCentral()
}

configurations {
	ajc
	aspectJCompileTime
}

compileJava {
	ajc {
		enabled = true
		classpath.setFrom configurations.aspectJCompileTime
	}
}

compileTestJava {
	ajc {
		classpath.setFrom configurations.aspectJCompileTime
	}
}

dependencies {
	implementation project(':common')
	implementation project(':monitoring:core')

	aspectJCompileTime "org.aspectj:aspectjtools:1.9.20.1"
	implementation "org.aspectj:aspectjrt:$aspectjVersion"
	implementation "org.aspectj:aspectjweaver:$aspectjVersion"	// for our custom AspectJ weaver (class: AspectJLoader)

	implementation "org.glassfish.jersey.core:jersey-server:3.1.8"
	implementation "org.glassfish.jersey.core:jersey-common:3.1.8"
	implementation "org.glassfish.jersey.core:jersey-client:3.1.7"

	implementation "javax.servlet:javax.servlet-api:4.0.1"
	implementation "javax.jms:javax.jms-api:2.0.1"

	implementation "org.springframework:spring-beans:$springVersion"
	implementation "org.springframework:spring-context:$springVersion"
	implementation "org.springframework:spring-core:$springVersion"
	implementation "org.springframework:spring-web:$springVersion"
	implementation "org.springframework:spring-webmvc:$springVersion"

	// testing
	testImplementation "org.hamcrest:hamcrest:$libHamcrestVersion"

	testImplementation "org.javassist:javassist:3.30.2-GA"

	testImplementation "junit:junit:$libJunitVersion"

	testImplementation "org.objenesis:objenesis:3.4"

	testImplementation "org.easymock:easymock:5.4.0"
	testImplementation "org.mockito:mockito-core:$libMockitoVersion"

	// this project depends on the tests of common, e.g., it requires the class AbstractKiekerTest
	testImplementation project (path: ':common', configuration: 'testArchives')
	testImplementation "org.springframework:spring-beans:$springVersion"
	testImplementation "org.springframework:spring-expression:3.$springVersion"

	testImplementation "org.eclipse.jetty:jetty-server:12.0.9"
	testImplementation "org.eclipse.jetty:jetty-webapp:11.0.24"
	testImplementation "org.eclipse.jetty:apache-jsp:11.0.23"

	testImplementation "commons-io:commons-io:2.16.1"

	testImplementation project(':common').sourceSets.test.output

	integrationTestImplementation "junit:junit:$libJunitVersion"
}

// publishing
publishing {
	publications {
		maven(MavenPublication) {
			groupId = 'net.kieker-monitoring'
			artifactId = 'monitoring-aspectj'
			version = version

			from components.java
		}
	}

	repositories {
		maven {
			def mavenUser = "NoMavenUser"
			if (System.env.kiekerMavenUser != null) {
				mavenUser = System.env.kiekerMavenUser
			}
			def mavenPassword = "NoMavenPassword"
			if (System.env.kiekerMavenPassword != null) {
				mavenPassword = System.env.kiekerMavenPassword
			}
			credentials {
				username = mavenUser
				password = mavenPassword
			}

			// Maven central:
			def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
			def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'

			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
		}
	}
}

task iajc(dependsOn: classes) {
	doLast {
		ant.taskdef(
			resource: 'org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties',
			classpath: configurations.ajc.asPath
		)
		ant.iajc(
			XlintFile: 'aspectjXlint.properties',
			X: 'joinpoints:synchronization',
			source: sourceCompatibility,
			target: targetCompatibility,
			debug: 'true',
			destdir: sourceSets.main.output.classesDir) {
			classpath {
				pathElement(location: configurations.compile.asPath)
				pathElement(location: sourceSets.main.output.classesDir)
			}

			sourceroots {
				pathElement(location: 'src/kieker/monitoring/probe/aspectj')
			}
		}
	}
}

sourceSets {
	jarIntegrationTest {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output

		compileClasspath += sourceSets.test.output
		runtimeClasspath += sourceSets.test.output

		java {
			srcDirs = [ 'integrationTest' ]
		}
	}
}

configurations {
	jarIntegrationTestImplementation.extendsFrom testImplementation
	jarIntegrationTestRuntimeOnly.extendsFrom runtimeOnly
}

task jarIntegrationTest(type: Test) {
	description = 'Runs integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.jarIntegrationTest.output.classesDirs
	classpath = sourceSets.jarIntegrationTest.runtimeClasspath
	dependsOn rootProject.aspectJJar
}

compileJarIntegrationTestJava {
	ajc {
		classpath.setFrom configurations.aspectJCompileTime
	}
}
