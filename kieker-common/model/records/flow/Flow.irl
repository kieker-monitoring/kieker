/***************************************************************************
 * Copyright 2018 Kieker Project (http://kieker-monitoring.net)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/
package kieker.common.record.flow

import kieker.common.record.flow.trace.TraceMetadata

@author 'Jan Waller' @since '1.5'
abstract entity AbstractEvent : IEventRecord

@author 'Jan Waller' @since '1.6'
template ICallObjectRecord : ICallRecord, IObjectRecord {
	alias objectId as callerObjectId
	int calleeObjectId = 0
}

@author 'Jan Waller' @since '1.6'
template ICallRecord : IOperationRecord {
	alias operationSignature as callerOperationSignature
	alias classSignature as callerClassSignature 
	string calleeOperationSignature = ""
	string calleeClassSignature = ""
}

@author 'Jan Waller' @since '1.8'
template IConstructorRecord : IOperationRecord

@author 'Jan Waller' @since '1.6'
template IEventRecord : IFlowRecord {
    long timestamp = 0
}

@author 'Jan Waller' @since '1.6'
template IExceptionRecord : IFlowRecord {
	string cause = ""
}

/**
 * Externalize property to circumvent inheritance problems when
 * inheriting IOperationRecord and IObjectRecord
 */
@author 'Reiner Jung' @since '1.10'
template IClassSignature {
	string classSignature = ""
}

@author 'Reiner Jung' @since '1.10'
template IOperationSignature {
	string operationSignature = ""	
}

@author 'Jan Waller' @since '1.5'
template IFlowRecord


@author 'Jan Waller' @since '1.6'
template IObjectRecord : IFlowRecord, IClassSignature {
	int objectId = 0
}

@author 'Jan Waller' @since '1.5'
template IOperationRecord : IFlowRecord, IOperationSignature, IClassSignature 

@author 'Jan Waller' @since '1.6'
template ITraceRecord : IFlowRecord {
	//grouped by TraceMetadata.traceId traceId = -1
	changeable long traceId = -1
	int orderIndex = -1
}

@author 'Florian Fittkau' @since '1.10'
template IInterfaceRecord : IFlowRecord {
	string interface
}

@author 'Christian Wulf' @since '1.13'
template IThreadBasedRecord : IFlowRecord {
	long threadId = -1
	int orderIndex = -1
}

