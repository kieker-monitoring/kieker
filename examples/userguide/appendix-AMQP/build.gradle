plugins {
   id 'application'
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
        implementation "ch.qos.logback:logback-classic:$libLogbackVersion"
	implementation "org.slf4j:slf4j-api:1.7.30"
	implementation "org.codehaus.groovy:groovy-all:3.0.2"
	implementation "net.kieker-monitoring:kieker:1.15"

	implementation "com.google.guava:guava:20.0"				// (21.0 and above require java 8) used by StringRegistryCache for amqp reader
	implementation "com.rabbitmq:amqp-client:5.8.0"
}


def monitoringConfigurationAMQP = 'META-INF/kieker.monitoring.properties'

distTar.enabled=false

// Simplify the JAR's file name
archivesBaseName = 'AMQPMonitoringAnalysis'
version = ''
	
sourceSets.main.java.srcDirs = ['src']
sourceSets.main.resources.srcDirs = ['src-resources', '../resources' ]

def monitoringConfiguration = {
  main = 'kieker.examples.userguide.appendixAMQP.BookstoreStarter'
  classpath = sourceSets.main.runtimeClasspath
  
  jvmArgs = ['-Dlog4j.configuration=META-INF/log4j.properties']
}

task runMonitoringAMQP(type: JavaExec) {
  configure monitoringConfiguration
  jvmArgs += "-Dkieker.monitoring.configuration=${monitoringConfigurationAMQP}"
}

def analysisConfiguration = {
  main = 'kieker.examples.userguide.appendixAMQP.AMQPAnalysisStarter'
	classpath = sourceSets.main.runtimeClasspath
  
  jvmArgs = ['-Dlog4j.configuration=META-INF/log4j.properties']
}

task runAnalysisAMQP(type: JavaExec) {
  configure analysisConfiguration
	args = ['amqp://guest:guest@127.0.0.1:5672', 'kieker']
}
