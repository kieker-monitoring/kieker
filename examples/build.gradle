defaultTasks 'cleanStandaloneExamples', 'buildStandaloneExamples'

task buildStandaloneExamples(dependsOn: [
	'replaceHardCodedVersionNames',
	'buildStandaloneExamplesUserguideCh2App',
	// 'buildStandaloneExamplesUserguideCh2Instr',
	// 'buildStandaloneExamplesUserguideCh34',
	// 'buildStandaloneExamplesUserguideCh5',
	// 'buildStandaloneExamplesUserguideAppendixJMS',
	// 'buildStandaloneExamplesUserguideAppendixAMQP',
	// 'buildStandaloneExamplesUserguideAppendixKafka',
	'buildStandaloneExamplesMonitoringJVM',
	'buildStandaloneExamplesMonitoringSpring',
	'buildStandaloneExamplesMonitoringManual',
	'buildStandaloneExamplesMonitoringAspectJ',
	'buildStandaloneExamplesMonitoringAdaptive',
	'buildStandaloneExamplesMonitoringTimesource',
	// 'buildStandaloneExamplesAnalysisTraceAnalysis',
	// 'buildStandaloneExamplesUserguideAppendixJavaEE',
	// 'replaceAbsoluteByRelativePathsEclipse'
	]) {
}

task replaceHardCodedVersionNames() {
	regexpReplaceInFiles(project.file("monitoring/probe-aspectj/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("monitoring/adaptive-monitoring/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("monitoring/custom-timesource/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("monitoring/probe-spring/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("monitoring/sampler-jvm/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("monitoring/probe-manual-tcp/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("monitoring/probe-manual/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("monitoring/sampler-oshi/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")

	regexpReplaceInFiles(project.file("userguide/appendix-JMS/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("userguide/appendix-Kafka/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("userguide/appendix-AMQP/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("userguide/ch3-4--custom-components/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("userguide/manual-instrumentation/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("userguide/bookstore-application/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("userguide/ch5--trace-monitoring-aspectj/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")

	regexpReplaceInFiles(project.file("analysis/trace-analysis/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("JavaEEServletContainerExample/gradle.properties"), "kiekerVersion=.*", "kiekerVersion=${kiekerVersion}")
	regexpReplaceInFiles(project.file("JavaEEServletContainerExample/jetty/start.ini"), "kieker-.*-aspectj.jar", "${rootProject.aspectJJar.archiveFileName}")

	regexpReplaceInFiles(project.file("userguide/ch5--trace-monitoring-aspectj/README.md"), "kieker-.*-aspectj.jar", "${rootProject.aspectJJar.archiveFileName}")
	regexpReplaceInFiles(project.file("userguide/ch3-4--custom-components/README.txt"), "kieker-.*-emf.jar", "${rootProject.emfJar.archiveFileName}")
	regexpReplaceInFiles(project.file("userguide/manual-instrumentation/README.txt"), "kieker-.*-emf.jar", "${rootProject.emfJar.archiveFileName}")

	regexpReplaceInFiles(project.file("userguide/ch5--trace-monitoring-aspectj/testdata/kieker-20141008-101258768-UTC-repairEventBasedTraces-example-plots.sh"), "KIEKER_VERSION=\".*\"", "KIEKER_VERSION=\"${kiekerVersion}\"")
	regexpReplaceInFiles(project.file("userguide/ch5--trace-monitoring-aspectj/testdata/kieker-20100830-082225522-UTC-example-plots.sh"), "KIEKER_VERSION=\".*\"", "KIEKER_VERSION=\"${kiekerVersion}\"")
	regexpReplaceInFiles(project.file("userguide/ch5--trace-monitoring-aspectj/testdata/kieker-20141009-163010944-UTC-constructor-events-example-plots.sh"), "KIEKER_VERSION=\".*\"", "KIEKER_VERSION=\"${kiekerVersion}\"")
	regexpReplaceInFiles(project.file("userguide/ch5--trace-monitoring-aspectj/testdata/kieker-20141008-101258768-UTC-example-plots.sh"), "KIEKER_VERSION=\".*\"", "KIEKER_VERSION=\"${kiekerVersion}\"")
	regexpReplaceInFiles(project.file("userguide/ch5--trace-monitoring-aspectj/testdata/kieker-20141009-160413833-UTC-operationExecutionsConstructors-example-plots.sh"), "KIEKER_VERSION=\".*\"", "KIEKER_VERSION=\"${kiekerVersion}\"")
}

// bookstore
task buildStandaloneExamplesUserguideCh2App(type: GradleBuild) {
	buildFile = 'userguide/bookstore-application/build.gradle'
	tasks = ['jar']
}

// Manual instrumentation bookstore
task copyLibsStandaloneExamplesUserguideCh2Instr(type: Copy, dependsOn: [rootProject.emfJar]) {
	from ('../build/libs') {
		include "kieker-${version}-emf.jar"
	}
	into 'userguide/ch2--manual-instrumentation/lib/'
}

task buildStandaloneExamplesUserguideCh2Instr(type: GradleBuild, dependsOn: 'copyLibsStandaloneExamplesUserguideCh2Instr') {
	buildFile = 'userguide/ch2--manual-instrumentation/build.gradle'
	tasks = ['jar']
}

// TODO rework, fix README
task copyLibsStandaloneExamplesUserguideCh34(type: Copy, dependsOn: [rootProject.emfJar]) {
	from ('../build/libs') {
		include "kieker-${version}-emf.jar"
	}
	into 'userguide/ch3-4--custom-components/lib/'
}

task buildStandaloneExamplesUserguideCh34(type: GradleBuild, dependsOn: 'copyLibsStandaloneExamplesUserguideCh34') {
	buildFile = 'userguide/ch3-4--custom-components/build.gradle'
	tasks = ['jar']
}

// TODO aspectJ and trace example
task copyLibsStandaloneExamplesUserguideCh5(type: Copy, dependsOn: [rootProject.aspectJJar]) {
	from ('../build/libs') {
		include "kieker-${version}-aspectj.jar"
	}
	into 'userguide/ch5--trace-monitoring-aspectj/lib/'
}

task buildStandaloneExamplesUserguideCh5(type: GradleBuild, dependsOn: 'copyLibsStandaloneExamplesUserguideCh5') {
	buildFile = 'userguide/ch5--trace-monitoring-aspectj/build.gradle'
	tasks = ['jar']
}

// JMS example
// FIXME
task copyLibsStandaloneExamplesUserguideAppendixJMS(type: Copy, dependsOn: [rootProject.emfJar]) {
	from ('../build/libs') {
		include "kieker-${version}-emf.jar"
	}
	//from configurations.jms

	into 'userguide/appendix-JMS/lib/'
}

task buildStandaloneExamplesUserguideAppendixJMS(type: GradleBuild, dependsOn: 'copyLibsStandaloneExamplesUserguideAppendixJMS') {
	buildFile = 'userguide/appendix-JMS/build.gradle'
	tasks = ['jar']
}

// AMQP example
// FIXME
task copyLibsStandaloneExamplesUserguideAppendixAMQP(type: Copy, dependsOn: [rootProject.emfJar]) {
	from ('../build/libs') {
		include "kieker-${version}-jar.jar"
	}
	// from configurations.amqp

	into 'userguide/appendix-AMQP/lib/'
}

task buildStandaloneExamplesUserguideAppendixAMQP(type: GradleBuild, dependsOn: 'copyLibsStandaloneExamplesUserguideAppendixAMQP') {
	buildFile = 'userguide/appendix-AMQP/build.gradle'
	tasks = ['jar', 'eclipseClasspath', 'eclipseJdt']
}

// Kafka example
// FIXME
task copyLibsStandaloneExamplesUserguideAppendixKafka(type: Copy, dependsOn: [rootProject.emfJar]) {
	from ('../build/libs') {
		include "kieker-${version}-jar.jar"
	}
	//from configurations.kafka

	into 'userguide/appendix-Kafka/lib/'
}

task buildStandaloneExamplesUserguideAppendixKafka(type: GradleBuild, dependsOn: 'copyLibsStandaloneExamplesUserguideAppendixKafka') {
	buildFile = 'userguide/appendix-Kafka/build.gradle'
	tasks = ['jar', 'eclipseClasspath', 'eclipseJdt']
}

// TODO Live demo could be moved
task copyLiveDemoLibsStandaloneExamplesUserguideAppendixJavaEE(type: Copy, dependsOn: [rootProject.emfJar]) {
	from ('../build/libs') {
		include "kieker-${version}-emf.jar"
	}
	into 'JavaEEServletContainerExample/livedemo-source/lib'
}

task copyJettyLibsStandaloneExamplesUserguideAppendixJavaEE(type: Copy, dependsOn: [rootProject.aspectJJar]) {
	from ('../build/libs') {
		include "kieker-${version}-aspectj.jar"
	}
	from ('..') {
		include "LICENSE"
		rename "LICENSE", "kieker-${version}-aspectj.jar.LICENSE"
	}
	into 'JavaEEServletContainerExample/jetty/webapps/jpetstore/WEB-INF/lib'
}

task buildStandaloneExamplesUserguideAppendixJavaEE(type: GradleBuild, dependsOn: [ copyJettyLibsStandaloneExamplesUserguideAppendixJavaEE, copyLiveDemoLibsStandaloneExamplesUserguideAppendixJavaEE ]) {
	buildFile = 'JavaEEServletContainerExample/build.gradle'
	tasks = ['buildExample']
}

// ----------------------------------------------
// Examples for specific technologies and methods
// ----------------------------------------------

// JVM sampler example
// added more dependencies, but I am not sure that this is a good solution. Looks ugly
task copyLibsStandaloneExamplesMonitoringJVM(type: Copy, dependsOn: [rootProject.mainJar, rootProject.aspectJJar, rootProject.javadocJar, rootProject.emfJar, rootProject.sourcesJar]) {
	from ('../build/libs') {
		include "kieker-${version}*.jar"
	}
	into 'monitoring/sampler-jvm/lib/'
}

task buildStandaloneExamplesMonitoringJVM(type: GradleBuild, dependsOn: 'copyLibsStandaloneExamplesMonitoringJVM') {
	buildFile = 'monitoring/sampler-jvm/build.gradle'
	tasks = ['jar']
}

// Spring tutorial example
task copyLibsStandaloneExamplesMonitoringSpring(type: Copy, dependsOn: [rootProject.mainJar]) {
	from ('../build/libs') {
		include "kieker-${version}.jar"
	}
	from ('../lib') {
		include "aspectjweaver-*.jar"
	}
	into 'monitoring/probe-spring/lib/'
}

task buildStandaloneExamplesMonitoringSpring(type: GradleBuild, dependsOn: 'copyLibsStandaloneExamplesMonitoringSpring') {
	buildFile = 'monitoring/probe-spring/build.gradle'
	tasks = ['jar']
}

//
task copyLibsStandaloneExamplesMonitoringManual(type: Copy, dependsOn: [rootProject.mainJar]) {
	from ('../build/libs') {
		include "kieker-${version}.jar"
	}
	into 'monitoring/probe-manual/lib/'
}

task buildStandaloneExamplesMonitoringManual(type: GradleBuild, dependsOn: 'copyLibsStandaloneExamplesMonitoringManual') {
	buildFile = 'monitoring/probe-manual/build.gradle'
	tasks = ['jar']
}

task copyLibsStandaloneExamplesMonitoringAspectJ(type: Copy, dependsOn: [rootProject.aspectJJar]) {
	from ('../build/libs') {
		include "kieker-${version}-aspectj.jar"
	}
	into 'monitoring/probe-aspectj/lib/'
}

task buildStandaloneExamplesMonitoringAspectJ(type: GradleBuild, dependsOn: 'copyLibsStandaloneExamplesMonitoringAspectJ') {
	buildFile = 'monitoring/probe-aspectj/build.gradle'
	tasks = ['jar']
}

task copyLibsStandaloneExamplesMonitoringAdaptive(type: Copy, dependsOn: [rootProject.aspectJJar]) {
	from ('../build/libs') {
		include "kieker-${version}-aspectj.jar"
	}
	into 'monitoring/adaptive-monitoring/lib/'
}

task buildStandaloneExamplesMonitoringAdaptive(type: GradleBuild, dependsOn: 'copyLibsStandaloneExamplesMonitoringAdaptive') {
	buildFile = 'monitoring/adaptive-monitoring/build.gradle'
	tasks = ['jar']
}



task copyLibsStandaloneExamplesMonitoringTimesource(type: Copy, dependsOn: [rootProject.aspectJJar]) {
	from ('../build/libs') {
		include "kieker-${version}-aspectj.jar"
	}
	into 'monitoring/custom-timesource/lib/'
}

task buildStandaloneExamplesMonitoringTimesource(type: GradleBuild, dependsOn: 'copyLibsStandaloneExamplesMonitoringTimesource') {
	buildFile = 'monitoring/custom-timesource/build.gradle'
	tasks = ['jar']
}

task copyLibsStandaloneExamplesAnalysisTraceAnalysis(type: Copy, dependsOn: [rootProject.mainJar]) {
	from ('../build/libs') {
		include "kieker-${version}-jar.jar"
	}
	into 'analysis/trace-analysis/lib/'
}

task buildStandaloneExamplesAnalysisTraceAnalysis(type: GradleBuild, dependsOn: [ 'copyLibsStandaloneExamplesAnalysisTraceAnalysis']) {
	buildFile = 'analysis/trace-analysis/build.gradle'
	tasks = ['jar']
}

task cleanStandaloneExamples(dependsOn: [
	'cleanStandaloneExamplesUserguideCh2App',
	// 'cleanStandaloneExamplesUserguideCh2Instr',
	// 'cleanStandaloneExamplesUserguideCh34',
	// 'cleanStandaloneExamplesUserguideCh5',
	// 'cleanStandaloneExamplesUserguideAppendixJMS',
	// 'cleanStandaloneExamplesUserguideAppendixAMQP',
	'cleanStandaloneExamplesMonitoringJVM',
	'cleanStandaloneExamplesMonitoringSpring',
	'cleanStandaloneExamplesMonitoringManual',
	'cleanStandaloneExamplesMonitoringAspectJ',
	'cleanStandaloneExamplesMonitoringAdaptive',
	'cleanStandaloneExamplesMonitoringTimesource',
	// 'cleanStandaloneExamplesAnalysisTraceAnalysis',
	// 'cleanStandaloneExamplesUserguideAppendixJavaEE'
	]) {
}

task cleanStandaloneExamplesUserguideCh2App(type: GradleBuild) {
	buildFile = 'userguide/bookstore-application/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'userguide/bookstore-application/lib', include: '*.jar')
}

task cleanStandaloneExamplesUserguideCh2Instr(type: GradleBuild) {
	buildFile = 'userguide/ch2--manual-instrumentation/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'userguide/ch2--manual-instrumentation/lib', include: '*.jar')
}

task cleanStandaloneExamplesUserguideCh34(type: GradleBuild) {
	buildFile = 'userguide/ch3-4--custom-components/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'userguide/ch3-4--custom-components/lib', include: '*.jar')
}

task cleanStandaloneExamplesUserguideCh5(type: GradleBuild) {
	buildFile = 'userguide/ch5--trace-monitoring-aspectj/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'userguide/ch5--trace-monitoring-aspectj/lib', include: '*.jar')
}

task cleanStandaloneExamplesUserguideAppendixJMS(type: GradleBuild) {
	buildFile = 'userguide/appendix-JMS/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'userguide/appendix-JMS/lib', include: '*.jar')
}

task cleanStandaloneExamplesUserguideAppendixAMQP(type: GradleBuild) {
	buildFile = 'userguide/appendix-AMQP/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'userguide/appendix-AMQP/lib', include: '*.jar')
}

task cleanStandaloneExamplesUserguideAppendixJavaEE(type: GradleBuild) {
	buildFile = 'JavaEEServletContainerExample/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'JavaEEServletContainerExample/livedemo-source/lib', include: '*kieker*.jar')
	delete fileTree(dir: 'JavaEEServletContainerExample/jetty/webapps/jpetstore/WEB-INF/lib', include: 'kieker*')
	delete 'JavaEEServletContainerExample/jetty/webapps/livedemo.war'
}

task cleanStandaloneExamplesMonitoringJVM(type: GradleBuild) {
	buildFile = 'monitoring/sampler-jvm/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'monitoring/sampler-jvm/lib', include: '*.jar')
}

task cleanStandaloneExamplesMonitoringSpring(type: GradleBuild) {
	buildFile = 'monitoring/probe-spring/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'monitoring/probe-spring/lib', include: '*.jar')
}

task cleanStandaloneExamplesMonitoringManual(type: GradleBuild) {
	buildFile = 'monitoring/probe-manual/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'monitoring/probe-manual/lib', include: '*.jar')
}

task cleanStandaloneExamplesMonitoringAspectJ(type: GradleBuild) {
	buildFile = 'monitoring/probe-aspectj/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'monitoring/probe-aspectj/lib', include: '*.jar')
}

task cleanStandaloneExamplesMonitoringAdaptive(type: GradleBuild) {
	buildFile = 'monitoring/adaptive-monitoring/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'monitoring/adaptive-monitoring/lib', include: '*.jar')
}

task cleanStandaloneExamplesMonitoringTimesource(type: GradleBuild) {
	buildFile = 'monitoring/custom-timesource/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'monitoring/custom-timesource/lib', include: '*.jar')
}

task cleanStandaloneExamplesAnalysisTraceAnalysis(type: GradleBuild) {
	buildFile = 'analysis/trace-analysis/build.gradle'
	tasks = ['clean']
	delete fileTree(dir: 'analysis/trace-analysis/lib', include: '*.jar')
}
