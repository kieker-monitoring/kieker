apply plugin: 'eclipse'

configurations {
	resultJar	// all dependencies in this config are included into all jars. This is necessary for the scripts in bin/ to work, e.g., convertLoggingTimestamp.
}

// Since the analysis component requires JRE 1.8, this "tools component" requires JRE 1.8, too.
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	clover 'org.openclover:clover:4.2.0'

	resultJar 'commons-cli:commons-cli:1.4'
	resultJar 'com.beust:jcommander:1.27'

	compile project(':kieker-common')
	compile project(':kieker-analysis')
	compile project(':kieker-monitoring')	

	compile 'org.apache.commons:commons-math3:3.6.1'	// used by OPAD
	compile 'org.apache.commons:commons-lang3:3.6'		// used by OPAD
	compile configurations.resultJar

	compile resolveLibrary('jgraphx-*.jar')				// this artifact is not available on our repositories
	compile resolveLibrary('Rsession-*.jar')
	compile resolveLibrary('Rserve-*.jar')
	compile resolveLibrary('REngine-*.jar')
	compile resolveLibrary('reflections-*.jar')
	compile resolveLibrary('activemq-core-*.jar')
	//compile group: 'org.eclipse.jetty',	name: 'jetty-server', version: '8.1.16.v20140903'
	
	// Some dependencies for the HTTP connector of the KDB
	//compile fileTree(dir: 'lib/jetty', include: 'jetty-*.jar')
	compile fileTree(dir: rootProject.file('kieker-examples/JavaEEServletContainerExample/jetty/lib'), include: 'jetty-*.jar')

	// this project depends on the tests of kieker-common, e.g., it requires the class AbstractKiekerTest
	testCompile project (path: ':kieker-common', configuration: 'testArchives')
	// this project depends on the tests of kieker-analysis, e.g., it requires the class BookstoreEventRecordFactory
	testCompile project (path: ':kieker-analysis', configuration: 'testArchives')
	// this project depends on the tests of kieker-analysis, e.g., it requires the class NamedListWriter
	testCompile project (path: ':kieker-monitoring', configuration: 'testArchives')

	//testRuntime org.apache.derby:derby:10.13.1.1
	//testRuntime resolveLibrary('geronimo-j2ee-management_1.1_spec-*.jar')
	//testRuntime resolveLibrary('kahadb-*.jar')
	//testRuntime fileTree(dir: rootProject.file('kieker-examples/JavaEEServletContainerExample/jetty/lib'), include: 'jetty-*.jar')
}

clover {
	report {
		html=true
	}
	
}

eclipse {
	classpath {
		defaultOutputDir = file('build-eclipse')
	}
}

task replaceHardCodedVersionNames() {
  doLast {
	regexpReplaceInFiles(project.file("test/kieker/test/tools/manual/TestTCPReader.java"), "kieker-.*-aspectj.jar", "${rootProject.aspectJJar.archiveName}")
  }
}

compileJava.dependsOn replaceHardCodedVersionNames
