def documentBaseFilename = 'kieker-userguide'

task fstLatexRun(type: Exec) {
  commandLine 'pdflatex', documentBaseFilename
}

task sndLatexRun(type: Exec) {
  commandLine 'pdflatex', documentBaseFilename
}

task thrdLatexRun(type: Exec) {
  commandLine 'pdflatex', documentBaseFilename
}

task bibtexRun(type: Exec) {
  commandLine 'bibtex', documentBaseFilename
}

task cleanDocumentation(type: Delete) {  
  delete fileTree(dir: '.', includes: ['*.aux, *.bbl', '*.blg', '*.glo', '*.idx', '*.log', '*.toc', '*.snm', '*.out', '*.nav', '*.bak', '*.vrb', 'backup'])  
}


task replaceHardCodedVersionNames() {
  doLast {
	regexpReplaceInFiles(project.file("bibliography.bib"), "CURYEAR = .* ", "CURYEAR = " + year() + " ")
	regexpReplaceInFiles(project.file("bibliography.bib"), "CURMONTH = .* ", "CURMONTH = " + monthMMM() + " ")
	regexpReplaceInFiles(project.file("bibliography.bib"), "Kieker .* User Guide", "Kieker $version User Guide")
	regexpReplaceInFiles(project.file("Macros.tex"), "mainJar\\}\\{kieker-.*.jar", "mainJar\\}\\{${rootProject.mainJar.archiveName}")
	regexpReplaceInFiles(project.file("Macros.tex"), "mainJarEMF\\}\\{kieker-.*.jar", "mainJarEMF\\}\\{${rootProject.emfJar.archiveName}")
	regexpReplaceInFiles(project.file("Macros.tex"), "mainJarWeaver\\}\\{kieker-.*.jar", "mainJarWeaver\\}\\{${rootProject.aspectJJar.archiveName}")
	regexpReplaceInFiles(project.file("Macros.tex"), "version\\}\\{.*\\}", "version\\}\\{${version}\\}")
  }
}

task buildDocumentation(dependsOn: replaceHardCodedVersionNames) {
  description 'Builds the user guide manual for Kieker'
  
  inputs.files fileTree('.') {
    include '*.tex'
    include '*.bib'
    include 'images/*'
  }
  outputs.file file(documentBaseFilename + '.pdf')
  
  doLast {
     tasks.fstLatexRun.execute()
     tasks.bibtexRun.execute()
     tasks.sndLatexRun.execute()
     tasks.thrdLatexRun.execute()
     tasks.cleanDocumentation.execute()
  }
}

